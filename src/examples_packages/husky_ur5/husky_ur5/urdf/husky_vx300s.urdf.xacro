<?xml version="1.0"?>
<!--
Software License Agreement (BSD)

\file      husky.urdf.xacro
\authors   Paul Bovbel <pbovbel@clearpathrobotics.com>, Devon Ash <dash@clearpathrobotics.com>
\copyright Copyright (c) 2015, Clearpath Robotics, Inc., All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that
the following conditions are met:
 * Redistributions of source code must retain the above copyright notice, this list of conditions and the
   following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
   following disclaimer in the documentation and/or other materials provided with the distribution.
 * Neither the name of Clearpath Robotics nor the names of its contributors may be used to endorse or promote
   products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WAR-
RANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, IN-
DIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<robot name="husky" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:arg name="transmission_hw_interface" default="hardware_interface/PositionJointInterface"/>
  <xacro:include filename="$(find ur_description)/urdf/ur5.urdf.xacro" />
  <xacro:include filename="$(find robotiq_ft_sensor)/urdf/robotiq_ft300.urdf.xacro" />
  <xacro:include filename="$(find robotiq_85_description)/urdf/robotiq_85_gripper.urdf.xacro" />

  <xacro:arg name="realsense_enabled" default="$(optenv HUSKY_REALSENSE_ENABLED 0)" />
  <xacro:arg name="realsense_xyz" default="$(optenv HUSKY_REALSENSE_XYZ 0 0 0)" />
  <xacro:arg name="realsense_rpy" default="$(optenv HUSKY_REALSENSE_RPY 0 0 0)" />
  <xacro:arg name="realsense_mount" default="$(optenv HUSKY_REALSENSE_MOUNT_FRAME sensor_arch_mount_link)" />

  <xacro:property name="husky_front_bumper_extend" value="$(optenv HUSKY_FRONT_BUMPER_EXTEND 0)" />
  <xacro:property name="husky_rear_bumper_extend" value="$(optenv HUSKY_REAR_BUMPER_EXTEND 0)" />

  <!-- Height of the sensor arch in mm.  Must be either 510 or 300 -->
  <xacro:arg name="sensor_arch_height"  default="$(optenv HUSKY_SENSOR_ARCH_HEIGHT 510)" />
  <xacro:arg name="sensor_arch"         default="$(optenv HUSKY_SENSOR_ARCH 0)" />

  <xacro:arg name="robot_namespace" default="$(optenv ROBOT_NAMESPACE /)" />
  <xacro:arg name="urdf_extras" default="$(optenv HUSKY_URDF_EXTRAS empty.urdf)" />
  <xacro:arg name="cpr_urdf_extras" default="$(optenv CPR_URDF_EXTRAS empty.urdf)" />

  <!-- Included URDF/XACRO Files -->
  <xacro:include filename="$(find husky_description)/urdf/decorations.urdf.xacro" />
  <xacro:include filename="$(find husky_description)/urdf/wheel.urdf.xacro" />

  <xacro:include filename="$(find husky_description)/urdf/accessories/intel_realsense.urdf.xacro"/>
  <xacro:include filename="$(find husky_description)/urdf/accessories/sick_lms1xx_mount.urdf.xacro"/>
  <xacro:include filename="$(find husky_description)/urdf/accessories/sensor_arch.urdf.xacro"/>
  <xacro:include filename="$(find husky_description)/urdf/accessories/vlp16_mount.urdf.xacro"/>

  <xacro:property name="M_PI" value="3.14159"/>

  <!-- Base Size -->
  <xacro:property name="base_x_size" value="0.98740000" />
  <xacro:property name="base_y_size" value="0.57090000" />
  <xacro:property name="base_z_size" value="0.24750000" />

  <!-- Wheel Mounting Positions -->
  <xacro:property name="wheelbase" value="0.5120" />
  <xacro:property name="track" value="0.5708" />
  <xacro:property name="wheel_vertical_offset" value="0.03282" />

  <!-- Wheel Properties -->
  <xacro:property name="wheel_length" value="0.1143" />
  <xacro:property name="wheel_radius" value="0.1651" />

  <!-- Base link is the center of the robot's bottom plate -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://husky_description/meshes/base_link.dae" />
      </geometry>
    </visual>
    <collision>
      <origin xyz="${( husky_front_bumper_extend - husky_rear_bumper_extend ) / 2.0} 0 ${base_z_size/4}" rpy="0 0 0" />
      <geometry>
        <box size="${ base_x_size + husky_front_bumper_extend + husky_rear_bumper_extend } ${base_y_size} ${base_z_size/2}"/>
      </geometry>
    </collision>
    <collision>
      <origin xyz="0 0 ${base_z_size*3/4-0.01}" rpy="0 0 0" />
      <geometry>
        <box size="${base_x_size*4/5} ${base_y_size} ${base_z_size/2-0.02}"/>
      </geometry>
    </collision>
  </link>

  <!-- Base footprint is on the ground under the robot -->
  <link name="base_footprint"/>

  <joint name="base_footprint_joint" type="fixed">
    <origin xyz="0 0 ${wheel_vertical_offset - wheel_radius}" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="base_footprint" />
  </joint>

  <!-- Inertial link stores the robot's inertial information -->
  <link name="inertial_link">
    <inertial>
      <mass value="46.034" />
      <origin xyz="-0.00065 -0.085 0.062" />
      <inertia ixx="0.6022" ixy="-0.02364" ixz="-0.1197" iyy="1.7386" iyz="-0.001544" izz="2.0296" />
    </inertial>
  </link>

  <joint name="inertial_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="inertial_link" />
  </joint>

  <!-- IMU Link is the standard mounting position for the UM6 IMU.-->
  <!-- Can be modified with environment variables in /etc/ros/setup.bash -->
  <link name="imu_link"/>
  <joint name="imu_joint" type="fixed">
    <origin xyz="$(optenv HUSKY_IMU_XYZ 0.19 0 0.149)" rpy="$(optenv HUSKY_IMU_RPY 0 -1.5708 3.1416)" />
    <parent link="base_link" />
    <child link="imu_link" />
  </joint>
  <gazebo reference="imu_link">
  </gazebo>

  <!-- #############################bumper_test###############################-->
  <link name="bumper_link">
    <inertial>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <mass value="0.0000000000001"/>
        <inertia ixx="0.00000001" ixy="0.00000001" ixz="0.00000001" iyy="0.00000001" iyz="0.00000001" izz="0.00000001"/>
    </inertial>
    <collision name="base_link_fixed_joint_lump__robot/bumper_link">
        <origin rpy="0 0 0" xyz="0 0 0.1"/>
        <geometry>
            <box size="1.0 0.7 0.31"/>
        </geometry>
    </collision>
  </link>
  <joint name="bumper_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0.0 0.0 0.0"/>
      <parent link="base_link" />
      <child link="bumper_link" />
  </joint>

  <gazebo reference="bumper_link">
    <sensor name='contactsensor_sensor' type='contact'>
      <always_on>true</always_on>
      <updaterate>100.0</updaterate>
      <contact>
        <collision>base_link_fixed_joint_lump__robot/bumper_link_collision_2</collision>
      </contact>
          <plugin name="gazebo_ros_bumper_controller" filename="libgazebo_ros_bumper.so">
              <bumperTopicName>bumper_states</bumperTopicName>
              <frameName>world</frameName>
          </plugin>
    </sensor>
  </gazebo>

  <!-- Husky wheel macros -->
  <xacro:husky_wheel wheel_prefix="front_left">
    <origin xyz="${wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:husky_wheel>
  <xacro:husky_wheel wheel_prefix="front_right">
    <origin xyz="${wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:husky_wheel>
  <xacro:husky_wheel wheel_prefix="rear_left">
    <origin xyz="${-wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:husky_wheel>
  <xacro:husky_wheel wheel_prefix="rear_right">
    <origin xyz="${-wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:husky_wheel>

  <xacro:husky_decorate />

  <!-- add the intel realsense to the sensor arch if needed -->
  <xacro:if value="$(arg realsense_enabled)">
    <link name="realsense_mountpoint"/>
    <joint name="realsense_mountpoint_joint" type="fixed">
      <origin xyz="$(arg realsense_xyz)" rpy="$(arg realsense_rpy)" />
      <parent link="$(arg realsense_mount)"/>
      <child link="realsense_mountpoint" />
    </joint>
    <xacro:intel_realsense_mount prefix="camera" topic="realsense" parent_link="realsense_mountpoint"/>
  </xacro:if>

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
      <updateRate>50.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>imu/data</topicName>
      <accelDrift>0.005 0.005 0.005</accelDrift>
      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
      <rateDrift>0.005 0.005 0.005 </rateDrift>
      <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
      <headingDrift>0.005</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="gps_controller" filename="libhector_gazebo_ros_gps.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
      <updateRate>40</updateRate>
      <bodyName>base_link</bodyName>
      <frameId>base_link</frameId>
      <topicName>navsat/fix</topicName>
      <velocityTopicName>navsat/vel</velocityTopicName>
      <referenceLatitude>49.9</referenceLatitude>
      <referenceLongitude>8.9</referenceLongitude>
      <referenceHeading>0</referenceHeading>
      <referenceAltitude>0</referenceAltitude>
      <drift>0.0001 0.0001 0.0001</drift>
    </plugin>
  </gazebo>

  <!-- Optional custom includes. -->
  <xacro:include filename="$(arg urdf_extras)" />

  <!-- Optional for Clearpath internal softwares -->
  <xacro:include filename="$(arg cpr_urdf_extras)" />

  <xacro:arg name="robot_name" default = "vx300s"/>
  <xacro:arg name="base_link_frame" default="base_link"/>
  <xacro:arg name="show_ar_tag" default="false"/>
  <xacro:arg name="show_gripper_bar" default="true"/>
  <xacro:arg name="show_gripper_fingers" default="true"/>
  <xacro:arg name="use_world_frame" default="false"/>
  <xacro:arg name="external_urdf_loc" default=""/>
  <xacro:arg name="load_gazebo_configs" default="false"/>

  <xacro:property name="urdf_loc" value="$(arg external_urdf_loc)"/>
  <xacro:property name="pi_offset" value="0.00001"/>

  <xacro:if value="$(arg load_gazebo_configs)">
    <xacro:include filename="$(find interbotix_xsarm_gazebo)/config/interbotix_texture.gazebo"/>
  </xacro:if>

  <material name="interbotix_black">
    <texture filename="package://interbotix_xsarm_descriptions/meshes/interbotix_black.png"/>
  </material>

  <xacro:if value="$(arg use_world_frame)">
    <link name="world"/>
    <joint name="fixed" type="fixed">
      <parent link="world"/>
      <child link="$(arg robot_name)/$(arg base_link_frame)"/>
    </joint>
  </xacro:if>

  <link name="$(arg robot_name)/$(arg base_link_frame)">
    <visual>
      <origin rpy="0 0 ${pi/2}" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_1_base.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 ${pi/2}" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_1_base.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 ${pi/2}" xyz="-0.0534774000 -0.0005625750 0.0205961000"/>
      <mass value="0.969034" />
      <inertia ixx="0.0060240000" iyy="0.0017000000" izz="0.0071620000" ixy="0.0000471300" ixz="0.0000038510" iyz="-0.0000841500" />
    </inertial>
  </link>

  <joint name="waist" type="revolute">
    <axis xyz="0 0 1"/>
    <limit effort="10" lower="${-pi + pi_offset}" upper="${pi - pi_offset}" velocity="${pi}"/>
    <origin rpy="0 0 0" xyz="0 0 0.079"/>
    <parent link="$(arg robot_name)/$(arg base_link_frame)"/>
    <child link="$(arg robot_name)/shoulder_link"/>
    <dynamics friction="0.1"/>
  </joint>

  <transmission name="trans_waist">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="waist">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="waist_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <link name="$(arg robot_name)/shoulder_link">
    <visual>
      <origin rpy="0 0 ${pi/2}" xyz="0 0 -0.003"/>
      <geometry>
        <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_2_shoulder.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 ${pi/2}" xyz="0 0 -0.003"/>
      <geometry>
        <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_2_shoulder.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 ${pi/2}" xyz="0.0002592330 -0.0000033552 0.0116129000"/>
      <mass value="0.798614" />
      <inertia ixx="0.0009388000" iyy="0.0011380000" izz="0.0012010000" ixy="-0.0000000010" ixz="-0.0000000191" iyz="0.0000059568" />
    </inertial>
  </link>

  <joint name="shoulder" type="revolute">
    <axis xyz="0 1 0"/>
    <limit effort="20" lower="${radians(-106)}" upper="${radians(72)}" velocity="${pi}"/>
    <origin rpy="0 0 0" xyz="0 0 0.04805"/>
    <parent link="$(arg robot_name)/shoulder_link"/>
    <child link="$(arg robot_name)/upper_arm_link"/>
    <dynamics friction="0.1"/>
  </joint>

  <transmission name="trans_shoulder">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="shoulder">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="shoulder_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <link name="$(arg robot_name)/upper_arm_link">
    <visual>
      <origin rpy="0 0 ${pi/2}" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_3_upper_arm.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 ${pi/2}" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_3_upper_arm.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 ${pi/2}" xyz="0.0206949000 0.0000000004 0.2264590000"/>
      <mass value="0.792592" />
      <inertia ixx="0.0089250000" iyy="0.0089370000" izz="0.0009357000" ixy="0.0000000000" ixz="0.0000000000" iyz="0.0012010000" />
    </inertial>
  </link>

  <joint name="elbow" type="revolute">
    <axis xyz="0 1 0"/>
    <limit effort="15" lower="${radians(-101)}" upper="${radians(92)}" velocity="${pi}"/>
    <origin rpy="0 0 0" xyz="0.05955 0 0.3"/>
    <parent link="$(arg robot_name)/upper_arm_link"/>
    <child link="$(arg robot_name)/upper_forearm_link"/>
    <dynamics friction="0.1"/>
  </joint>

  <transmission name="trans_elbow">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="elbow">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="elbow_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <link name="$(arg robot_name)/upper_forearm_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_4_upper_forearm.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_4_upper_forearm.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0.105723 0 0"/>
      <mass value="0.322228" />
      <inertia ixx="0.0001524000" iyy="0.0013420000" izz="0.0014410000" ixy="-0.0000188300" ixz="-0.0000084064" iyz="0.0000012564" />
    </inertial>
  </link>

  <joint name="forearm_roll" type="revolute">
    <axis xyz="1 0 0"/>
    <limit effort="2" lower="${-pi + pi_offset}" upper="${pi - pi_offset}" velocity="${pi}"/>
    <origin rpy="0 0 0" xyz="0.2 0 0"/>
    <parent link="$(arg robot_name)/upper_forearm_link"/>
    <child link="$(arg robot_name)/lower_forearm_link"/>
    <dynamics friction="0.1"/>
  </joint>

  <transmission name="trans_forearm_roll">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="forearm_roll">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="forearm_roll_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <link name="$(arg robot_name)/lower_forearm_link">
    <visual>
      <origin rpy="${pi} 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_5_lower_forearm.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="${pi} 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_5_lower_forearm.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="${pi} 0 0" xyz="0.0513477000 0.0068046200 0"/>
      <mass value="0.414823" />
      <inertia ixx="0.0001753000" iyy="0.0005269000" izz="0.0005911000" ixy="-0.0000852800" ixz="0" iyz="0" />
    </inertial>
  </link>

  <joint name="wrist_angle" type="revolute">
    <axis xyz="0 1 0"/>
    <limit effort="5" lower="${radians(-107)}" upper="${radians(128)}" velocity="${pi}"/>
    <origin rpy="0 0 0" xyz="0.1 0 0"/>
    <parent link="$(arg robot_name)/lower_forearm_link"/>
    <child link="$(arg robot_name)/wrist_link"/>
    <dynamics friction="0.1"/>
  </joint>

  <transmission name="trans_wrist_angle">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wrist_angle">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="wrist_angle_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <link name="$(arg robot_name)/wrist_link">
    <visual>
      <origin rpy="0 0 ${pi/2}" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_6_wrist.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 ${pi/2}" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_6_wrist.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 ${pi/2}" xyz="0.0467430000 -0.0000076652 0.0105650000"/>
      <mass value="0.115395" />
      <inertia ixx="0.0000463100" iyy="0.0000451400" izz="0.0000527000" ixy="0.0000000195" ixz="0.0000000023" iyz="0.0000042002" />
    </inertial>
  </link>

  <joint name="wrist_rotate" type="revolute">
    <axis xyz="1 0 0"/>
    <limit effort="1" lower="${-pi + pi_offset}" upper="${pi - pi_offset}" velocity="${pi}"/>
    <origin rpy="0 0 0" xyz="0.069744 0 0"/>
    <parent link="$(arg robot_name)/wrist_link"/>
    <child link="$(arg robot_name)/gripper_link"/>
    <dynamics friction="0.1"/>
  </joint>

  <transmission name="trans_wrist_rotate">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wrist_rotate">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="wrist_rotate_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <link name="$(arg robot_name)/gripper_link">
    <visual>
      <origin rpy="0 0 ${pi/2}" xyz="-0.02 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_7_gripper.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 ${pi/2}" xyz="-0.02 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_7_gripper.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 ${pi/2}" xyz="0.0230010000 0.0000000000 0.0115230000"/>
      <mass value="0.097666" />
      <inertia ixx="0.0000326800" iyy="0.0000243600" izz="0.0000211900" ixy="0.0000000000" ixz="0.0000000000" iyz="0.0000002785" />
    </inertial>
  </link>

  <joint name="ee_arm" type="fixed">
    <axis xyz="1 0 0"/>
    <origin rpy="0 0 0" xyz="0.042825 0 0"/>
    <parent link="$(arg robot_name)/gripper_link"/>
    <child link="$(arg robot_name)/ee_arm_link"/>
  </joint>

  <link name="$(arg robot_name)/ee_arm_link">
    <inertial>
      <mass value="0.001" />
      <inertia ixx="0.0001" iyy="0.0001" izz="0.0001" ixy="0" ixz="0" iyz="0" />
    </inertial>
  </link>

  <joint name="gripper" type="continuous">
    <axis xyz="1 0 0"/>
    <limit effort="1" velocity="${pi}"/>
    <origin rpy="0 0 0" xyz="0.005675 0 0"/>
    <parent link="$(arg robot_name)/ee_arm_link"/>
    <child link="$(arg robot_name)/gripper_prop_link"/>
    <dynamics friction="0.1"/>
  </joint>

  <transmission name="trans_gripper">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="gripper">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="gripper_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <link name="$(arg robot_name)/gripper_prop_link">
    <visual>
      <origin rpy="0 0 ${pi/2}" xyz="-0.0685 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_8_gripper_prop.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 ${pi/2}" xyz="-0.0685 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_8_gripper_prop.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 ${pi/2}" xyz="0.0023780000 0.0000000285 0.0000000000"/>
      <mass value="0.008009" />
      <inertia ixx="0.0000020386" iyy="0.0000042979" izz="0.0000023796" ixy="0.0000000000" ixz="0.0000006559" iyz="0.0000000000" />
    </inertial>
  </link>

  <!-- If the AR tag is being used, then add the AR tag mount -->

  <xacro:if value="$(arg show_ar_tag)">

    <joint name="ar_tag" type="fixed">
      <axis xyz="0 0 0"/>
      <origin rpy="0 0 0" xyz="-0.017 0 0.04155"/>
      <parent link="$(arg robot_name)/ee_arm_link"/>
      <child link="$(arg robot_name)/ar_tag_link"/>
    </joint>

    <link name="$(arg robot_name)/ar_tag_link">
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_11_ar_tag.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="interbotix_black"/>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_11_ar_tag.stl" scale="0.001 0.001 0.001"/>
        </geometry>
      </collision>
      <inertial>
        <origin rpy="0 0 0" xyz="0 0 -0.00315"/>
        <mass value="0.016507"/>
        <inertia ixx="0.000003084" ixy="0" ixz="0" iyy="0.000003084" iyz="0" izz="0.000006059"/>
      </inertial>
    </link>

  </xacro:if>

  <!-- If the gripper bar is being used, then also add the gripper bar -->

  <xacro:if value="$(arg show_gripper_bar)">

    <joint name="gripper_bar" type="fixed">
      <axis xyz="1 0 0"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <parent link="$(arg robot_name)/ee_arm_link"/>
      <child link="$(arg robot_name)/gripper_bar_link"/>
    </joint>

    <link name="$(arg robot_name)/gripper_bar_link">
      <visual>
        <origin rpy="0 0 ${pi/2}" xyz="-0.063 0 0"/>
        <geometry>
          <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_9_gripper_bar.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="interbotix_black"/>
      </visual>
      <collision>
        <origin rpy="0 0 ${pi/2}" xyz="-0.063 0 0"/>
        <geometry>
          <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_9_gripper_bar.stl" scale="0.001 0.001 0.001"/>
        </geometry>
      </collision>
      <inertial>
        <origin rpy="0 0 ${pi/2}" xyz="0.0067940000 -0.0000004272 -0.0007760000"/>
        <mass value="0.150986" />
        <inertia ixx="0.0000789500" iyy="0.0003283000" izz="0.0003095000" ixy="-0.0000000012" ixz="0.0000001341" iyz="0.0000017465" />
      </inertial>
    </link>

    <joint name="ee_bar" type="fixed">
      <axis xyz="1 0 0"/>
      <origin rpy="0 0 0" xyz="0.025875 0 0"/>
      <parent link="$(arg robot_name)/gripper_bar_link"/>
      <child link="$(arg robot_name)/fingers_link"/>
    </joint>

    <link name="$(arg robot_name)/fingers_link">
      <inertial>
        <mass value="0.001" />
        <inertia ixx="0.0001" iyy="0.0001" izz="0.0001" ixy="0" ixz="0" iyz="0" />
      </inertial>
    </link>

    <!-- If the gripper fingers are being used, add those as well -->

    <xacro:if value="$(arg show_gripper_fingers)">

      <joint name="left_finger" type="prismatic">
        <axis xyz="0 1 0"/>
        <limit effort="5" lower="0.021" upper="0.057" velocity="1"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <parent link="$(arg robot_name)/fingers_link"/>
        <child link="$(arg robot_name)/left_finger_link"/>
        <dynamics friction="0.1"/>
      </joint>

      <transmission name="trans_left_finger">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="left_finger">
          <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="left_finger_motor">
          <mechanicalReduction>1</mechanicalReduction>
        </actuator>
      </transmission>

      <link name="$(arg robot_name)/left_finger_link">
        <visual>
          <origin rpy="${pi/2} ${-pi} ${pi/2}" xyz="-0.0404 -0.0575 0"/>
          <geometry>
            <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_10_gripper_finger.stl" scale="0.001 0.001 0.001"/>
          </geometry>
          <material name="interbotix_black"/>
        </visual>
        <collision>
          <origin rpy="${pi/2} ${-pi} ${pi/2}" xyz="-0.0404 -0.0575 0"/>
          <geometry>
            <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_10_gripper_finger.stl" scale="0.001 0.001 0.001"/>
          </geometry>
        </collision>
        <inertial>
          <origin rpy="${pi} ${pi} ${pi/2}" xyz="0.0173440000 -0.0060692000 0.0000000000"/>
          <mass value="0.034796" />
          <inertia ixx="0.0000243300" iyy="0.0000125500" izz="0.0000141700" ixy="-0.0000024004" ixz="0.0000000000" iyz="0.0000000000" />
        </inertial>
      </link>

      <joint name="right_finger" type="prismatic">
        <axis xyz="0 1 0"/>
        <limit effort="5" lower="-0.057" upper="-0.021" velocity="1"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <parent link="$(arg robot_name)/fingers_link"/>
        <child link="$(arg robot_name)/right_finger_link"/>
        <dynamics friction="0.1"/>
        <xacro:unless value="$(arg load_gazebo_configs)">
          <mimic joint="left_finger" multiplier="-1" offset="0"/>
        </xacro:unless>
      </joint>

      <transmission name="trans_right_finger">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="right_finger">
          <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="right_finger_motor">
          <mechanicalReduction>1</mechanicalReduction>
        </actuator>
      </transmission>

      <link name="$(arg robot_name)/right_finger_link">
        <visual>
          <origin rpy="${-pi/2} ${pi} ${-pi/2}" xyz="-0.0404 0.0575 0 "/>
          <geometry>
            <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_10_gripper_finger.stl" scale="0.001 0.001 0.001"/>
          </geometry>
          <material name="interbotix_black"/>
        </visual>
        <collision>
          <origin rpy="${-pi/2} ${pi} ${-pi/2}" xyz="-0.0404 0.0575 0 "/>
          <geometry>
            <mesh filename="package://interbotix_xsarm_descriptions/meshes/vx300s_meshes/vx300s_10_gripper_finger.stl" scale="0.001 0.001 0.001"/>
          </geometry>
        </collision>
        <inertial>
          <origin rpy="0 ${pi} ${pi/2}" xyz="0.0173440000 0.0060692000  0.0000000000"/>
          <mass value="0.034796" />
          <inertia ixx="0.0000243300" iyy="0.0000125500" izz="0.0000141700" ixy="0.0000024001" ixz="0.0000000000" iyz="0.0000000000" />
        </inertial>
      </link>

      <joint name="ee_gripper" type="fixed">
        <axis xyz="1 0 0"/>
        <origin rpy="0 0 0" xyz="0.0385 0 0"/>
        <parent link="$(arg robot_name)/fingers_link"/>
        <child link="$(arg robot_name)/ee_gripper_link"/>
      </joint>

      <link name="$(arg robot_name)/ee_gripper_link">
        <inertial>
          <mass value="0.001" />
          <inertia ixx="0.0001" iyy="0.0001" izz="0.0001" ixy="0" ixz="0" iyz="0" />
        </inertial>
      </link>

    </xacro:if>

  </xacro:if>

  <xacro:if value="${urdf_loc != ''}">
    <xacro:include filename="${urdf_loc}"/>
  </xacro:if>

  <joint name="vx300s_joint" type="fixed">
    <parent link="top_plate_link" />
    <child link = "vx300s/base_link" />
    <origin xyz="0.3 0.0 0.0" rpy="0.0 0.0 0.0" />
  </joint>

</robot>
